definitions:
  models.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.ChangePasswordResponse:
    properties:
      message:
        type: string
    type: object
  models.ForgetPasswordRequest:
    properties:
      email:
        type: string
    type: object
  models.ForgetPasswordResponse:
    properties:
      message:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      user_id:
        type: integer
    type: object
  models.ResetPasswordRequest:
    properties:
      password:
        type: string
      token:
        type: string
    type: object
  models.ResetPasswordResponse:
    properties:
      message:
        type: string
    type: object
  models.SignupRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      redirect_uri:
        default: http://localhost:8767
        type: string
    type: object
  models.SignupResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /auth/forget-password/:
    post:
      consumes:
      - application/json
      description: Forget password
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ForgetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ForgetPasswordResponse'
      summary: Forget password
      tags:
      - Authentication
  /auth/login/:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
      summary: Login
      tags:
      - Authentication
  /auth/reset-password/:
    post:
      consumes:
      - application/json
      description: Reset password
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResetPasswordResponse'
      summary: Reset password
      tags:
      - Authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Sign up
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SignupResponse'
      summary: Sign up
      tags:
      - Authentication
  /auth/verify-email:
    get:
      consumes:
      - application/json
      description: Verify email
      parameters:
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Email verified
          schema:
            type: string
      summary: Verify email
      tags:
      - Authentication
  /user/change-password/:
    post:
      consumes:
      - application/json
      description: Change password
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChangePasswordResponse'
      security:
      - Bearer: []
      summary: Change password
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create user
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by id
      produces:
      - application/json
      responses:
        "200":
          description: Get user by id
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get user by id
      tags:
      - User
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
